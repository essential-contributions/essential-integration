storage {
    owners: (int => b256),
}

interface Auth {
    intent Auth {
        pub var key: b256;
        pub var to: b256;
        pub var token: int;
        pub var set: b256;
        pub var intent_addr: b256;
        pub var path: int;
    }
}

intent Mint {
    var token: int;
    var new_owner: b256;

    state owner = storage::owners[token];

    constraint owner == nil;

    constraint owner' == new_owner;
}

intent Transfer {
    interface AuthInstance = Auth(0x1006007ABC4764B5DA57B1D63067BA2E9A4E7A0FB28E3A05D4818ACC22AC40D2);
    intent A = AuthInstance::Auth(0xFDC450568635A38999BA6FC50FB46818E59217DF980AA87EE755CF646A0F3611);

    state owner = storage::owners[A::token];

    constraint owner == A::key;
    constraint owner' == A::to;

    lib::@is_this_intent(A);
    lib::@constrain_keys(A::token);
}
