storage {
    owners: (b256 => b256),
}

interface Auth {
    intent Auth {
        pub var key: b256;
        pub var token: b256;
        pub var to: b256;
        pub var set: b256;
        pub var intent_addr: b256;
        pub var path: int;
    }
}

intent Mint {
    var token: b256;
    var new_owner: b256;

    state owner = storage::owners[token];

    constraint owner == nil;

    constraint owner' == new_owner;
}

intent Transfer {
    interface AuthInstance = Auth(0xDE1F5AF64BDD7F7C28B6E55DB97335C65A5ACDC021F3ABCE2EEDEA271E8D3DEA);
    intent A = AuthInstance::Auth(0xA5706CAA21604DAC05D795CAFC3EA254D822AFABA1627336DD95EE0F1A44CB83);

    state owner = storage::owners[A::token];

    constraint owner == A::key;
    constraint owner' == A::to;

    lib::@is_this_intent(A);
    lib::@constrain_keys(A::token);

}
