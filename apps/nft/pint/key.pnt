storage {
    nonce: (b256 => int),
}

intent Key {
    pub var key: b256;
    pub var to: b256;
    pub var token: int;
    pub var set: b256;
    pub var intent_addr: b256;
    pub var path: int;

    var new_nonce: int;
    var sig: lib::Secp256k1Signature;
    var public_key: lib::Secp256k1PublicKey;
    
    state nonce = storage::nonce[key];
    
    constraint lib::@init(nonce);
    constraint new_nonce == nonce';
    constraint lib::@recover({key, to, token, new_nonce, set, intent_addr, path}; sig; public_key);
    constraint __sha256(public_key) == key;
}