
name: ci

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Check the nix code is formatted.
  nix-fmt-check:
    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
      contents: "read"
    steps:
    - uses: actions/checkout@v3
    - uses: DeterminateSystems/nix-installer-action@v10
    - uses: DeterminateSystems/magic-nix-cache-action@v4
    - run: nix fmt -- --check ./

  # Check the devShell works on macOS and Linux.
  nix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        command: [
            "shell --print-build-logs --no-update-lock-file",
          ]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: "write"
      contents: "read"
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@v10
      - uses: DeterminateSystems/magic-nix-cache-action@v4
      - run: nix ${{ matrix.command }}

  # TODO: Update/fork this tool to provide a simpler, cargo-plugin-style CLI
  # so that it can be merged in the command table above
  cargo-toml-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo install --version "0.1.1" cargo-toml-lint
    - run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint

  # Test the apps.
  apps:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Add each app's test command here, each with a unique port.
          - command: nix run .#test-app-counter -- 44001
          - command: |
              nix run .#compile-all-contracts
              nix develop .#essential-rust-app-dev --command cargo check --locked --all
              nix develop .#essential-rust-app-dev --command cargo clippy --locked --all -- -D warnings
              nix develop .#essential-rust-app-dev --command cargo fmt --all -- --check
              nix develop .#essential-rust-app-dev --command cargo test
    runs-on: ubuntu-latest
    permissions:
      id-token: "write"
      contents: "read"
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@v10
      - uses: DeterminateSystems/magic-nix-cache-action@v4
      - run: ${{ matrix.command }}
